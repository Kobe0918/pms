<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mjrj.lzh.pms.dao.SysRolePermissionRelationDOMapper" >
  <resultMap id="BaseResultMap" type="com.mjrj.lzh.pms.entity.SysRolePermissionRelationDO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="permission_id" property="permissionId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, permission_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_role_permission_relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByRoleId" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select
    permission_id
    from sys_role_permission_relation
    where role_id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_role_permission_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mjrj.lzh.pms.entity.SysRolePermissionRelationDO" >
    insert into sys_role_permission_relation (id, role_id, permission_id
      )
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{permissionId,jdbcType=INTEGER}
      )
  </insert>

  <insert id ="insertForeach" parameterType="java.util.List" >
    insert into sys_role_permission_relation
    (role_id, permission_id)
    values
    <foreach collection ="doList" item="item" index= "index" separator =",">
      (
      #{item.roleId}, #{item.permissionId}
      )
    </foreach >
  </insert >
  <insert id="insertSelective" parameterType="com.mjrj.lzh.pms.entity.SysRolePermissionRelationDO" >
    insert into sys_role_permission_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="permissionId != null" >
        permission_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="permissionId != null" >
        #{permissionId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mjrj.lzh.pms.entity.SysRolePermissionRelationDO" >
    update sys_role_permission_relation
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="permissionId != null" >
        permission_id = #{permissionId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mjrj.lzh.pms.entity.SysRolePermissionRelationDO" >
    update sys_role_permission_relation
    set role_id = #{roleId,jdbcType=INTEGER},
      permission_id = #{permissionId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="insertPermissionIds"  >
    delete from sys_role_permission_relation
    <trim prefix="where" prefixOverrides="and">
      <if test="roleId != null">
        and role_id = #{roleId,jdbcType=INTEGER}
      </if>
      <if test="permissionIds != null and permissionIds.size() >0">
        and permission_id in
        <foreach collection="permissionIds" index="index" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </trim>
  </delete>

  <delete id="deleteByRoleId" parameterType="java.lang.Integer">
    delete from sys_role_permission_relation
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByRoleIds" parameterType="java.util.Arrays">
    delete from sys_role_permission_relation where role_id in
    <foreach collection="roleIds" close=")" open="(" separator="," item="item" index="index">
      #{item}
    </foreach>
  </delete>
</mapper>