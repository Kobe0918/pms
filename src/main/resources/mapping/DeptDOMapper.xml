<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mjrj.lzh.pms.dao.DeptDOMapper" >
  <resultMap id="BaseResultMap" type="com.mjrj.lzh.pms.entity.DeptDO" >
    <id column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="dept_name" property="deptName" jdbcType="VARCHAR" />
    <result column="dept_status" property="deptStatus" jdbcType="BIT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="connect_user_id" property="connectUserId" jdbcType="INTEGER" />
<!--该mapper传输到 对应一mapper的属性 property为实体类中对应存放的值   column 该mapper传输过去的参数   -->
      <association property="connectUser" column="connect_user_id" javaType="com.mjrj.lzh.pms.entity.DeptDO"
                   select="com.mjrj.lzh.pms.dao.SysUserDOMapper.selectSomeByPrimaryKey">
      </association>

      <!--JavaType是用来指定pojo中属性的类型，而ofType指定的是映射到list集合属性中pojo的类型。-->
      <!--pojo类：  private  List<Post> posts;-->
      <!--xml : <collection property="posts"  ofType="com.spenglu.Post"  javaType="java.util.ArrayList" column="userid">-->
      <!--ofType="com.spenglu.Post"  javaType="java.util.ArrayList"-->
      <collection property="positionId" column="dept_id" ofType="java.lang.Integer" javaType="java.util.ArrayList"
      select="com.mjrj.lzh.pms.dao.SysDeptPositionRelationDOMapper.selectByDeptId">
      </collection>


    <!--<select id = "selectTest" resultMap="BaseResultMap">-->
    <!--select * from dept  d, sys_user  a where d.connect_user_id = a.id-->
    <!--</select>-->
    <!--匹配下面-->
   <!--<association property="connectUser"  column="connect_user_id" javaType="com.mjrj.lzh.pms.entity.SysUserDO">&ndash;&gt;-->
      <!--<id column="id" property="id" jdbcType="INTEGER" />-->
      <!--<result column="user_name" property="userName" jdbcType="VARCHAR" />-->
      <!--<result column="telephone" property="telephone" jdbcType="VARCHAR" />-->
      <!--<result column="live_address" property="liveAddress" jdbcType="VARCHAR" />-->
    <!--</association>-->

  </resultMap>
  <sql id="Base_Column_List" >
    dept_id, dept_name, dept_status, remark, update_user_id, update_time, create_time,connect_user_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from dept
    where dept_id = #{deptId,jdbcType=INTEGER}
  </select>

  <select id="selectNameByPrimaryKey" resultType="java.lang.String" parameterType="java.lang.Integer" >
    select
    dept_name
    from dept
    where dept_id = #{deptId,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from dept
    where dept_id = #{deptId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mjrj.lzh.pms.entity.DeptDO" >
    insert into dept (dept_id, dept_name, dept_status, 
      remark, update_user_id, update_time, 
      create_time,connect_user_id)
    values (#{deptId,jdbcType=INTEGER}, #{deptName,jdbcType=VARCHAR}, #{deptStatus,jdbcType=BIT},
      #{remark,jdbcType=VARCHAR}, #{updateUserId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP},#{connectUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mjrj.lzh.pms.entity.DeptDO" useGeneratedKeys="true" keyProperty="deptId">
    insert into dept
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="deptName != null" >
        dept_name,
      </if>
      <if test="deptStatus != null" >
        dept_status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="connectUserId != null" >
        connect_user_id,
      </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="deptName != null" >
        #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="deptStatus != null" >
        #{deptStatus,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="connectUserId != null" >
        #{connectUserId,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mjrj.lzh.pms.entity.DeptDO" >
    update dept
    <set >
      <if test="deptName != null" >
        dept_name = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="deptStatus != null" >
        dept_status = #{deptStatus,jdbcType=BIT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="connectUserId != null" >
        connect_user_id =  #{connectUserId,jdbcType=INTEGER},
      </if>
    </set>
    where dept_id = #{deptId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mjrj.lzh.pms.entity.DeptDO" >
    update dept
    set dept_name = #{deptName,jdbcType=VARCHAR},
      dept_status = #{deptStatus,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      connect_user_id =  #{connectUserId,jdbcType=INTEGER}
    where dept_id = #{deptId,jdbcType=INTEGER}
  </update>
  <select id="selectByPage" parameterType="com.mjrj.lzh.pms.dto.pagedto.DeptPageDTO" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from dept
    <trim prefix="where" >
      <if test="deptName != null and deptName != ''" >
        instr(dept_name,#{deptName,jdbcType=VARCHAR})>0
      </if>
    </trim>
      order by create_time desc

  </select>

          <!--left join sys_dept_position_relation b on(a.dept_id = b.dept_id)-->
</mapper>